{"ast":null,"code":"var _s = $RefreshSig$();\nimport dataFetchReducer from \"../reducer/dataFetchReducer\";\nconst loadData = (initialUrl, initialData) => {\n  _s();\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData\n  });\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_INIT'\n      });\n      try {\n        const result = await axios(url);\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: result.data\n          });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_FAILURE'\n          });\n        }\n      }\n    };\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n  return [state, setUrl];\n};\n_s(loadData, \"8O84rnMhN/ccDCMj8UQbHeW4IW0=\");\nexport default loadAccount;","map":{"version":3,"names":["dataFetchReducer","loadData","initialUrl","initialData","url","setUrl","useState","state","dispatch","useReducer","isLoading","isError","data","useEffect","didCancel","fetchData","type","result","axios","payload","error","loadAccount"],"sources":["C:/Users/Never/panel1/src/API/loadData.js"],"sourcesContent":["import dataFetchReducer from \"../reducer/dataFetchReducer\";\r\n\r\nconst loadData = (initialUrl, initialData) => {\r\n    const [url, setUrl] = useState(initialUrl);\r\n  \r\n    const [state, dispatch] = useReducer(dataFetchReducer, {\r\n      isLoading: false,\r\n      isError: false,\r\n      data: initialData,\r\n    });\r\n  \r\n    useEffect(() => {\r\n      let didCancel = false;\r\n  \r\n      const fetchData = async () => {\r\n        dispatch({ type: 'FETCH_INIT' });\r\n  \r\n        try {\r\n          const result = await axios(url);\r\n  \r\n          if (!didCancel) {\r\n            dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\r\n          }\r\n        } catch (error) {\r\n          if (!didCancel) {\r\n            dispatch({ type: 'FETCH_FAILURE' });\r\n          }\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n  \r\n      return () => {\r\n        didCancel = true;\r\n      };\r\n    }, [url]);\r\n  \r\n    return [state, setUrl];\r\n  };\r\n\r\n  export default loadAccount;"],"mappings":";AAAA,OAAOA,gBAAgB,MAAM,6BAA6B;AAE1D,MAAMC,QAAQ,GAAG,CAACC,UAAU,EAAEC,WAAW,KAAK;EAAA;EAC1C,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGC,QAAQ,CAACJ,UAAU,CAAC;EAE1C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGC,UAAU,CAACT,gBAAgB,EAAE;IACrDU,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE,KAAK;IACdC,IAAI,EAAET;EACR,CAAC,CAAC;EAEFU,SAAS,CAAC,MAAM;IACd,IAAIC,SAAS,GAAG,KAAK;IAErB,MAAMC,SAAS,GAAG,YAAY;MAC5BP,QAAQ,CAAC;QAAEQ,IAAI,EAAE;MAAa,CAAC,CAAC;MAEhC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAACd,GAAG,CAAC;QAE/B,IAAI,CAACU,SAAS,EAAE;UACdN,QAAQ,CAAC;YAAEQ,IAAI,EAAE,eAAe;YAAEG,OAAO,EAAEF,MAAM,CAACL;UAAK,CAAC,CAAC;QAC3D;MACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACd,IAAI,CAACN,SAAS,EAAE;UACdN,QAAQ,CAAC;YAAEQ,IAAI,EAAE;UAAgB,CAAC,CAAC;QACrC;MACF;IACF,CAAC;IAEDD,SAAS,EAAE;IAEX,OAAO,MAAM;MACXD,SAAS,GAAG,IAAI;IAClB,CAAC;EACH,CAAC,EAAE,CAACV,GAAG,CAAC,CAAC;EAET,OAAO,CAACG,KAAK,EAAEF,MAAM,CAAC;AACxB,CAAC;AAAC,GApCEJ,QAAQ;AAsCZ,eAAeoB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}